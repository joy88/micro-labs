C51 COMPILER V9.56.0.0   LED_TIMER1                                                        07/29/2017 23:23:56 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LED_TIMER1
OBJECT MODULE PLACED IN .\Objects\led_timer1.obj
COMPILER INVOKED BY: C:\Keil\ARM\C51\BIN\C51.EXE led_timer1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\led_timer1.lst) OBJECT(.\Objects\led_timer1.obj)

line level    source

   1          #include    <reg51.h>
   2          #include    <intrins.h>
   3          #include    <limits.h>
   4          #include        "tm1638.h"
   5          
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          #define ulong unsigned long
   9          
  10          uchar num;
  11          ulong count = 65535;
  12             
  13          void get_digits(unsigned long num, unsigned char* digits)
  14          {
  15   1          uchar index = 0;
  16   1          uchar i = 0;
  17   1          while(num > 0){
  18   2              i = num % 10;
  19   2              num /= 10;
  20   2              digits[index++] = i;  
  21   2          }
  22   1      }
  23          
  24          void delay(int ms)
  25          {
  26   1          int i, j;
  27   1          for(i = 0;i<ms;i++)
  28   1              for(j=0;j<100;j++)
  29   1                  ;
  30   1      }
  31          
  32          void init()
  33          {
  34   1              //unsigned char i;
  35   1              init_TM1638(); // init TM1638
  36   1              //for(i=0;i<8;i++)
  37   1              //Write_DATA(i<<1,tab[0]);
  38   1      }
  39          
  40          void update_led2()
  41          {
  42   1          ulong tmp;
  43   1          uchar digits[8] = {0};
  44   1          
  45   1          uchar i;
  46   1          if(count >= 100000000){
  47   2              tmp = count % 100000000;
  48   2          }else{
  49   2              tmp = count;
  50   2          }
  51   1          get_digits(tmp, digits);
  52   1          for(i = 7;i>=0;i--){
  53   2              Write_DATA(i<<1, tab[digits[i]]);
  54   2          }
C51 COMPILER V9.56.0.0   LED_TIMER1                                                        07/29/2017 23:23:56 PAGE 2   

  55   1      }
  56          
  57          void update_led()
  58          {
  59   1          uint tmp = count;
  60   1          Write_DATA(0<<1, tab[0]);
  61   1          Write_DATA(1<<1, tab[0]);
  62   1          Write_DATA(2<<1, tab[0]);
  63   1          // 16bit max = 65535
  64   1          Write_DATA(3<<1, tab[tmp/10000]);
  65   1          tmp = tmp % 10000;
  66   1          Write_DATA(4<<1, tab[tmp/1000]);
  67   1          tmp = tmp % 1000;
  68   1          Write_DATA(5<<1, tab[tmp/100]);
  69   1          tmp = tmp % 100;
  70   1          Write_DATA(6<<1, tab[tmp/10]);
  71   1          Write_DATA(7<<1, tab[tmp%10]);
  72   1      }
  73          
  74          void main()
  75          {
  76   1          init();
  77   1          update_led();
  78   1          TMOD = 0x01; // timer0 work mode
  79   1          TH0 = (65535-45872)/256; // for 11.0592MHz
  80   1          TL0 = (65535-45872)%256; // init
  81   1          EA = 1; // global on-off
  82   1          ET0 = 1; // timer0 interrupt
  83   1          TR0 = 1; // start timer0
  84   1          while(1) // wait for interrupt
  85   1          {
  86   2              // 20 * 50ms = 1s
  87   2              if(num == 20)
  88   2              {
  89   3                  num = 0;
  90   3                  count--;
  91   3                  update_led();
  92   3              }
  93   2          }
  94   1      }
  95          
  96          void T0_time() interrupt 1
  97          {
  98   1          TH0 = (65535-45872)/256; // for 11.0592MHz
  99   1          TL0 = (65535-45872)%256; // init
 100   1          num++;
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    806    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
